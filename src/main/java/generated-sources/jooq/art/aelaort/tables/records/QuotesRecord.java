/*
 * This file is generated by jOOQ.
 */
package art.aelaort.tables.records;


import art.aelaort.tables.Quotes;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuotesRecord extends UpdatableRecordImpl<QuotesRecord> implements Record8<Integer, Integer, String, String, String, Integer, LocalDate, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.quotes.id</code>.
     */
    public QuotesRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.quotes.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.quotes.rating</code>.
     */
    public QuotesRecord setRating(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.quotes.rating</code>.
     */
    public Integer getRating() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.quotes.quote</code>.
     */
    public QuotesRecord setQuote(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.quotes.quote</code>.
     */
    public String getQuote() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.quotes.telegram_file_id</code>.
     */
    public QuotesRecord setTelegramFileId(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.quotes.telegram_file_id</code>.
     */
    public String getTelegramFileId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.quotes.file_url_id</code>.
     */
    public QuotesRecord setFileUrlId(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.quotes.file_url_id</code>.
     */
    public String getFileUrlId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.quotes.quote_id</code>.
     */
    public QuotesRecord setQuoteId(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.quotes.quote_id</code>.
     */
    public Integer getQuoteId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.quotes.quote_date</code>.
     */
    public QuotesRecord setQuoteDate(LocalDate value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.quotes.quote_date</code>.
     */
    public LocalDate getQuoteDate() {
        return (LocalDate) get(6);
    }

    /**
     * Setter for <code>public.quotes.thumb_file_exists</code>.
     */
    public QuotesRecord setThumbFileExists(Boolean value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.quotes.thumb_file_exists</code>.
     */
    public Boolean getThumbFileExists() {
        return (Boolean) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Integer, String, String, String, Integer, LocalDate, Boolean> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, Integer, String, String, String, Integer, LocalDate, Boolean> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Quotes.QUOTES.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Quotes.QUOTES.RATING;
    }

    @Override
    public Field<String> field3() {
        return Quotes.QUOTES.QUOTE;
    }

    @Override
    public Field<String> field4() {
        return Quotes.QUOTES.TELEGRAM_FILE_ID;
    }

    @Override
    public Field<String> field5() {
        return Quotes.QUOTES.FILE_URL_ID;
    }

    @Override
    public Field<Integer> field6() {
        return Quotes.QUOTES.QUOTE_ID;
    }

    @Override
    public Field<LocalDate> field7() {
        return Quotes.QUOTES.QUOTE_DATE;
    }

    @Override
    public Field<Boolean> field8() {
        return Quotes.QUOTES.THUMB_FILE_EXISTS;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getRating();
    }

    @Override
    public String component3() {
        return getQuote();
    }

    @Override
    public String component4() {
        return getTelegramFileId();
    }

    @Override
    public String component5() {
        return getFileUrlId();
    }

    @Override
    public Integer component6() {
        return getQuoteId();
    }

    @Override
    public LocalDate component7() {
        return getQuoteDate();
    }

    @Override
    public Boolean component8() {
        return getThumbFileExists();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getRating();
    }

    @Override
    public String value3() {
        return getQuote();
    }

    @Override
    public String value4() {
        return getTelegramFileId();
    }

    @Override
    public String value5() {
        return getFileUrlId();
    }

    @Override
    public Integer value6() {
        return getQuoteId();
    }

    @Override
    public LocalDate value7() {
        return getQuoteDate();
    }

    @Override
    public Boolean value8() {
        return getThumbFileExists();
    }

    @Override
    public QuotesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public QuotesRecord value2(Integer value) {
        setRating(value);
        return this;
    }

    @Override
    public QuotesRecord value3(String value) {
        setQuote(value);
        return this;
    }

    @Override
    public QuotesRecord value4(String value) {
        setTelegramFileId(value);
        return this;
    }

    @Override
    public QuotesRecord value5(String value) {
        setFileUrlId(value);
        return this;
    }

    @Override
    public QuotesRecord value6(Integer value) {
        setQuoteId(value);
        return this;
    }

    @Override
    public QuotesRecord value7(LocalDate value) {
        setQuoteDate(value);
        return this;
    }

    @Override
    public QuotesRecord value8(Boolean value) {
        setThumbFileExists(value);
        return this;
    }

    @Override
    public QuotesRecord values(Integer value1, Integer value2, String value3, String value4, String value5, Integer value6, LocalDate value7, Boolean value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QuotesRecord
     */
    public QuotesRecord() {
        super(Quotes.QUOTES);
    }

    /**
     * Create a detached, initialised QuotesRecord
     */
    public QuotesRecord(Integer id, Integer rating, String quote, String telegramFileId, String fileUrlId, Integer quoteId, LocalDate quoteDate, Boolean thumbFileExists) {
        super(Quotes.QUOTES);

        setId(id);
        setRating(rating);
        setQuote(quote);
        setTelegramFileId(telegramFileId);
        setFileUrlId(fileUrlId);
        setQuoteId(quoteId);
        setQuoteDate(quoteDate);
        setThumbFileExists(thumbFileExists);
        resetChangedOnNotNull();
    }
}
